import{r as t,d as n,h as s,a as o,H as e}from"./p-e1defc51.js";import{c as i}from"./p-cfbebfdc.js";import{s as r}from"./p-33315b75.js";import"./p-a1c5e2d4.js";import"./p-3333ff2d.js";import"./p-d1ae8003.js";import"./p-5cc7fca6.js";import"./p-6cdc03eb.js";import{g as c}from"./p-9e5127cc.js";import{c as a,a as u}from"./p-8f078939.js";var f=a((function(t){
/*!
 * gumshoejs v5.1.2
 * A simple, framework-agnostic scrollspy script.
 * (c) 2019 Chris Ferdinandi
 * MIT License
 * http://github.com/cferdinandi/gumshoe
 */
var n;n=void 0!==u?u:"undefined"!=typeof window?window:u,t.exports=function(t){var n={navClass:"active",contentClass:"active",nested:!1,nestedClass:"active",offset:0,reflow:!1,events:!0},s=function(t,n,s){if(s.settings.events){var o=new CustomEvent(t,{bubbles:!0,cancelable:!0,detail:s});n.dispatchEvent(o)}},o=function(t){var n=0;if(t.offsetParent)for(;t;)n+=t.offsetTop,t=t.offsetParent;return n>=0?n:0},e=function(t){t&&t.sort((function(t,n){return o(t.content)<o(n.content)?-1:1}))},i=function(n,s,o){var e=n.getBoundingClientRect(),i=function(t){return"function"==typeof t.offset?parseFloat(t.offset()):parseFloat(t.offset)}(s);return o?parseInt(e.bottom,10)<(t.innerHeight||document.documentElement.clientHeight):parseInt(e.top,10)<=i},r=function(){return t.innerHeight+t.pageYOffset>=Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)},c=function(t,n){var s=t[t.length-1];if(function(t,n){return!(!r()||!i(t.content,n,!0))}(s,n))return s;for(var o=t.length-1;o>=0;o--)if(i(t[o].content,n))return t[o]},a=function(t,n){if(n.nested&&t.parentNode){var s=t.parentNode.closest("li");s&&(s.classList.remove(n.nestedClass),a(s,n))}},u=function(t,n){if(t){var o=t.nav.closest("li");o&&(o.classList.remove(n.navClass),t.content.classList.remove(n.contentClass),a(o,n),s("gumshoeDeactivate",o,{link:t.nav,content:t.content,settings:n}))}},f=function(t,n){if(n.nested){var s=t.parentNode.closest("li");s&&(s.classList.add(n.nestedClass),f(s,n))}};return function(o,i){var r,a,l,p,d,h={setup:function(){r=document.querySelectorAll(o),a=[],Array.prototype.forEach.call(r,(function(t){var n=document.getElementById(decodeURIComponent(t.hash.substr(1)));n&&a.push({nav:t,content:n})})),e(a)},detect:function(){var t=c(a,d);t?l&&t.content===l.content||(u(l,d),function(t,n){if(t){var o=t.nav.closest("li");o&&(o.classList.add(n.navClass),t.content.classList.add(n.contentClass),f(o,n),s("gumshoeActivate",o,{link:t.nav,content:t.content,settings:n}))}}(t,d),l=t):l&&(u(l,d),l=null)}},v=function(){p&&t.cancelAnimationFrame(p),p=t.requestAnimationFrame(h.detect)},m=function(){p&&t.cancelAnimationFrame(p),p=t.requestAnimationFrame((function(){e(a),h.detect()}))};return h.destroy=function(){l&&u(l,d),t.removeEventListener("scroll",v,!1),d.reflow&&t.removeEventListener("resize",m,!1),a=null,r=null,l=null,p=null,d=null},d=function(){var t={};return Array.prototype.forEach.call(arguments,(function(n){for(var s in n){if(!n.hasOwnProperty(s))return;t[s]=n[s]}})),t}(n,i||{}),h.setup(),h.detect(),t.addEventListener("scroll",v,!1),d.reflow&&t.addEventListener("resize",m,!1),h}}(n)}));const l=class{constructor(s){t(this,s),this.spxScrollspyDidLoad=n(this,"spxScrollspyDidLoad",7),this.contentClass="spx-scrollspy__content--active",this.display="block",this.navClass="spx-scrollspy__nav--active",this.offset=0,this.scrollingOffset=50,this.target="a",this.urlChange=!1}onLinkChange(t){!0===this.urlChange&&history.replaceState(null,null,t.detail.link.getAttribute("href")),!0===this.scrolling&&this.el.scroll({top:this.el.querySelector('a[href="'+t.detail.link.getAttribute("href")+'"]').offsetTop-this.scrollingOffset,behavior:"smooth"})}componentDidLoad(){c(this.el),this.myGumshoe=new f(":scope "+this.target,{reflow:!0,navClass:this.navClass,contentClass:this.contentClass,events:!0,offset:()=>{return(t=this.offset)&&!isNaN(t)?t:t?document.querySelector(t).getBoundingClientRect().height:t?void 0:0;var t}}),this.spxScrollspyDidLoad.emit({target:"document"})}async reload(){this.myGumshoe.setup()}render(){const t=i({display:r("spx-scrollspy","display",this.display)});return s(e,{class:t})}get el(){return o(this)}};export{l as spx_scrollspy}