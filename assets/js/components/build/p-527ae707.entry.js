import{r as s,h as t,H as r,a as o}from"./p-e1defc51.js";import{c as i}from"./p-cfbebfdc.js";import{s as p}from"./p-33315b75.js";import"./p-a1c5e2d4.js";import{s as a}from"./p-3333ff2d.js";import"./p-d1ae8003.js";import"./p-5cc7fca6.js";import"./p-6cdc03eb.js";import{g as e}from"./p-9e5127cc.js";const c=class{constructor(t){s(this,t),this.display="block"}componentDidLoad(){e(this.el),this.forwardAttributes(),new MutationObserver(s=>{s.forEach(()=>{this.forwardAttributes()})}).observe(this.el,{attributes:!0})}forwardAttributes(){const s=(s=>Array.prototype.slice.call(this.el.querySelectorAll("*")).filter((function(t){return t.tagName.match(s)})))(this.target?new RegExp(this.target,"i"):/^spx/i);for(var t,r=0,o=this.el.attributes,i=o.length;r<i;r++)a((t=o[r]).nodeName,"g-")&&s.forEach(s=>{s.setAttribute(t.nodeName.substring(2),t.nodeValue)})}async reload(){this.componentDidLoad()}render(){const s=i({display:p("spx-group","display",this.display)});return t(r,{class:s},t("slot",null))}get el(){return o(this)}};export{c as spx_group}