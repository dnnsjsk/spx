import{r as t,c as n,h as e,a as s,H as i}from"./p-d8297fdb.js";import{c as o,a as r,b as a,d as c,e as u,s as l}from"./p-ae086eeb.js";import{d as f}from"./p-d099ae82.js";import"./p-a6008498.js";var h=o((function(t){
/*!
 * gumshoejs v5.1.2
 * A simple, framework-agnostic scrollspy script.
 * (c) 2019 Chris Ferdinandi
 * MIT License
 * http://github.com/cferdinandi/gumshoe
 */
var n;n=void 0!==r?r:"undefined"!=typeof window?window:r,t.exports=function(t){var n={navClass:"active",contentClass:"active",nested:!1,nestedClass:"active",offset:0,reflow:!1,events:!0},e=function(t,n,e){if(e.settings.events){var s=new CustomEvent(t,{bubbles:!0,cancelable:!0,detail:e});n.dispatchEvent(s)}},s=function(t){var n=0;if(t.offsetParent)for(;t;)n+=t.offsetTop,t=t.offsetParent;return n>=0?n:0},i=function(t){t&&t.sort((function(t,n){return s(t.content)<s(n.content)?-1:1}))},o=function(n,e,s){var i=n.getBoundingClientRect(),o=function(t){return"function"==typeof t.offset?parseFloat(t.offset()):parseFloat(t.offset)}(e);return s?parseInt(i.bottom,10)<(t.innerHeight||document.documentElement.clientHeight):parseInt(i.top,10)<=o},r=function(){return t.innerHeight+t.pageYOffset>=Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)},a=function(t,n){var e=t[t.length-1];if(function(t,n){return!(!r()||!o(t.content,n,!0))}(e,n))return e;for(var s=t.length-1;s>=0;s--)if(o(t[s].content,n))return t[s]},c=function(t,n){if(n.nested&&t.parentNode){var e=t.parentNode.closest("li");e&&(e.classList.remove(n.nestedClass),c(e,n))}},u=function(t,n){if(t){var s=t.nav.closest("li");s&&(s.classList.remove(n.navClass),t.content.classList.remove(n.contentClass),c(s,n),e("gumshoeDeactivate",s,{link:t.nav,content:t.content,settings:n}))}},l=function(t,n){if(n.nested){var e=t.parentNode.closest("li");e&&(e.classList.add(n.nestedClass),l(e,n))}};return function(s,o){var r,c,f,h,d,v={setup:function(){r=document.querySelectorAll(s),c=[],Array.prototype.forEach.call(r,(function(t){var n=document.getElementById(decodeURIComponent(t.hash.substr(1)));n&&c.push({nav:t,content:n})})),i(c)},detect:function(){var t=a(c,d);t?f&&t.content===f.content||(u(f,d),function(t,n){if(t){var s=t.nav.closest("li");s&&(s.classList.add(n.navClass),t.content.classList.add(n.contentClass),l(s,n),e("gumshoeActivate",s,{link:t.nav,content:t.content,settings:n}))}}(t,d),f=t):f&&(u(f,d),f=null)}},p=function(){h&&t.cancelAnimationFrame(h),h=t.requestAnimationFrame(v.detect)},m=function(){h&&t.cancelAnimationFrame(h),h=t.requestAnimationFrame((function(){i(c),v.detect()}))};return v.destroy=function(){f&&u(f,d),t.removeEventListener("scroll",p,!1),d.reflow&&t.removeEventListener("resize",m,!1),c=null,r=null,f=null,h=null,d=null},d=function(){var t={};return Array.prototype.forEach.call(arguments,(function(n){for(var e in n){if(!n.hasOwnProperty(e))return;t[e]=n[e]}})),t}(n,o||{}),v.setup(),v.detect(),t.addEventListener("scroll",p,!1),d.reflow&&t.addEventListener("resize",m,!1),v}}(n)}));const d=class{constructor(e){t(this,e),this.spxScrollspyDidLoad=n(this,"spxScrollspyDidLoad",7),this.spxScrollspyActivate=n(this,"spxScrollspyActivate",7),this.spxScrollspyDeactivate=n(this,"spxScrollspyDeactivate",7),this.contentClass="spx-scrollspy__content--active",this.display=f,this.navClass="spx-scrollspy__nav--active",this.offset=0,this.target="a",this.urlChange=!1}onLinkActive(t){this.urlChange&&history.replaceState(null,null,t.detail.link.getAttribute("href")),this.scrolling&&this.el.scroll({top:this.el.querySelector('a[href="'+t.detail.link.getAttribute("href")+'"]').offsetTop-this.scrolling,behavior:"smooth"}),this.spxScrollspyActivate.emit({target:"document",link:t.detail.link,content:t.detail.content})}onLinkDeactivate(t){this.spxScrollspyDeactivate.emit({target:"document",link:t.detail.link,content:t.detail.content})}componentDidLoad(){a({el:this.el}),this.myGumshoe=new h(":scope "+this.target,{reflow:!0,navClass:this.navClass,contentClass:this.contentClass,events:!0,offset:()=>{return(t=this.offset)&&!isNaN(t)?t:t?document.querySelector(t).getBoundingClientRect().height:t?void 0:0;var t}}),this.spxScrollspyDidLoad.emit({target:"document"})}componentWillUpdate(){c(this.el)}async reload(){this.myGumshoe.setup()}render(){const t=u({display:l("spx-scrollspy","display",this.display)});return e(i,{class:t})}get el(){return s(this)}};export{d as spx_scrollspy}