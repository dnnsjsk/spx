import{r as i,c as s,h as t,H as a,a as h}from"./p-d8297fdb.js";import{h as e,b as o,d as n,e as r,s as d}from"./p-ae086eeb.js";import{c as l}from"./p-70de8434.js";import{h as m}from"./p-175d0e83.js";import"./p-dc57ceb6.js";const c="spx-slideshow",p=class{constructor(t){i(this,t),this.spxSlideshowDidLoad=s(this,"spxSlideshowDidLoad",7),this.display="block",this.duration="60s",this.gap="1em",this.maxWidth="300px",this.objectFit="contain",this.initSlideshow=()=>{this.container.querySelectorAll(":scope > *").forEach((i=>{const s=i.cloneNode(!0);this.clone.appendChild(s)})),this.offsetWidth=this.container.offsetWidth},this.update=()=>{this.container.innerHTML="",this.clone.innerHTML="",this.content=this.el.innerHTML,setTimeout((()=>{this.initSlideshow(),e({el:this.el,condition:this.lazy})}),100)}}imagesChanged(i){i&&(this.imagesArray=JSON.parse(i))}onResize(){this.container&&(this.offsetWidth=this.container.offsetWidth)}componentWillLoad(){this.content=this.el.innerHTML,this.images&&this.imagesChanged(this.images)}componentDidLoad(){o({el:this.el,lazy:this.lazy,cb:this.update}),this.initSlideshow(),this.spxSlideshowDidLoad.emit({target:"document"})}componentWillUpdate(){n(this.el)}render(){const{css:i,keyframes:s}=l(this.el.shadowRoot),h=s({"0%":{transform:"translate3d(0px, 0px, 0px)"},to:{transform:"translate3d(calc(-"+this.offsetWidth+"px - "+this.gap+"), 0px, 0px)"}}),e=r({display:d(c,"display",this.display)}),o=i({overflow:d(c,"overflow",this.overflow)}),n=i({animationName:h,animationDuration:d(c,"speed",this.duration),animationTimingFunction:"linear",animationIterationCount:"infinite",animationFillMode:"none",animationPlayState:"running",display:"flex",img:{maxWidth:"100%",width:"100%",height:this.height?d(c,"image-height",this.height):"auto",objectFit:d(c,"object-fit",this.objectFit)},"& > div + div":{marginLeft:d(c,"gap",this.gap)}}),p=i({display:"grid",gridAutoFlow:"column",gridAutoColumns:d(c,"max-width",this.maxWidth),gridGap:d(c,"gap",this.gap)});return t(a,{class:e},t("div",{class:o},t("div",{class:n},m({class:p,condition:this.images,content:this.content,el:this.el,ref:i=>this.container=i,helper:{array:this.imagesArray,images:this.images,size:this.imageSize,src:this.imageSrc}}),t("div",{class:p,ref:i=>this.clone=i}))))}get el(){return h(this)}static get watchers(){return{images:["imagesChanged"]}}};export{p as spx_slideshow}